{"version":3,"file":"static/js/888.e3e31e1b.chunk.js","mappings":"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","sources":["webpack://todolist-with-login/./src/components/TaskItem/TaskItem.module.css?6d51","components/TaskItem/TaskItem.jsx","redux/filter/selectors.js","redux/tasks/selectors.js","webpack://todolist-with-login/./src/components/TasksList/TasksList.module.css?d487","components/TasksList/TasksList.jsx","webpack://todolist-with-login/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://todolist-with-login/./src/components/TaskForm/TaskForm.module.css?c90e","components/TaskForm/TaskForm.jsx","webpack://todolist-with-login/./src/components/TasksBar/TasksBar.module.css?1725","webpack://todolist-with-login/./src/components/TaskCounter/TaskCounter.module.css?6054","components/TaskCounter/TaskCounter.jsx","webpack://todolist-with-login/./src/components/StatusFilter/StatusFilter.module.css?8bce","components/StatusFilter/StatusFilter.jsx","components/TasksBar/TasksBar.jsx","pages/Tasks/Tasks.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"TaskItem_listItem__sfNOP\",\"wrapper\":\"TaskItem_wrapper__BEiQM\",\"text\":\"TaskItem_text__5TQbh\",\"btn\":\"TaskItem_btn__nuUyw\",\"checkbox\":\"TaskItem_checkbox__ELfI7\"};","import { useDispatch } from 'react-redux';\nimport { deleteTask, toggleCompleted } from 'redux/tasks/operations';\nimport { MdClose } from 'react-icons/md';\nimport css from './TaskItem.module.css';\n\nexport const TaskItem = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteTask(task.id));\n  };\n\n  const handleToggle = () => {\n    dispatch(toggleCompleted(task));\n  };\n\n  return (\n    <li className={css.listItem}>\n      <div className={css.wrapper}>\n        <input\n          type=\"checkbox\"\n          className={css.checkbox}\n          checked={task.completed}\n          onChange={handleToggle}\n        />\n        <p className={css.text}>{task.text}</p>\n        <button className={css.btn} onClick={handleDelete}>\n          <MdClose size={22} />\n        </button>\n      </div>\n    </li>\n  );\n};\n","export const selectStatusFilter = state => state.filters.status;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { statusFilters } from 'redux/constants';\nimport { selectStatusFilter } from 'redux/filter/selectors';\n\nexport const selectTasks = state => state.tasks.items;\nexport const selectIsLoading = state => state.tasks.isLoading;\nexport const selectError = state => state.tasks.error;\n\nexport const selectTaskCount = createSelector([selectTasks], tasks => {\n  const count = tasks.reduce(\n    (acc, task) => {\n      if (task.completed) {\n        acc.completed += 1;\n      } else {\n        acc.active += 1;\n      }\n\n      return acc;\n    },\n    { active: 0, completed: 0 }\n  );\n\n  return count;\n});\n\nexport const selectVisibleTasks = createSelector(\n  [selectTasks, selectStatusFilter],\n  (tasks, statusFilter) => {\n    switch (statusFilter) {\n      case statusFilters.active:\n        return tasks.filter(task => !task.completed);\n      case statusFilters.completed:\n        return tasks.filter(task => task.completed);\n      default:\n        return tasks;\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TasksList_list__F59Om\"};","import { useSelector } from 'react-redux';\nimport { TaskItem } from 'components/TaskItem/TaskItem';\nimport { selectVisibleTasks } from 'redux/tasks/selectors';\nimport css from './TasksList.module.css';\n\nexport const TasksList = () => {\n  const tasks = useSelector(selectVisibleTasks);\n\n  return (\n    <ul className={css.list}>\n      {tasks.map(task => (\n        <TaskItem key={task.id} task={task} />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\",\"isSelected\":\"Button_isSelected__-6JYv\"};","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskForm_form__LZ0D1\",\"field\":\"TaskForm_field__3Hftx\"};","import { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\nimport { Button } from 'components/Button/Button';\nimport css from './TaskForm.module.css';\n\nexport const TaskForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(addTask(form.elements.text.value));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Enter task text\"\n      />\n      <Button type=\"submit\">Add task</Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TasksBar_wrapper__zv1mr\"};","// extracted by mini-css-extract-plugin\nexport default {\"tasksCounter\":\"TaskCounter_tasksCounter__3LRPj\",\"title\":\"TaskCounter_title__6Rsks\",\"tasksCounterList\":\"TaskCounter_tasksCounterList__HR8u6\"};","import { useSelector } from 'react-redux';\nimport { selectTaskCount } from 'redux/tasks/selectors';\nimport css from './TaskCounter.module.css';\n\nexport const TaskCouner = () => {\n  const count = useSelector(selectTaskCount);\n\n  const { active, completed } = count;\n\n  return (\n    <div className={css.tasksCounter}>\n      <h2 className={css.title}>Tasks:</h2>\n      <ul className={css.tasksCounterList}>\n        <li>Active: {active}</li>\n        <li>Complited: {completed}</li>\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"statusFilter\":\"StatusFilter_statusFilter__LLjw6\",\"title\":\"StatusFilter_title__bOay8\",\"wrapper\":\"StatusFilter_wrapper__gblkH\"};","import { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/filter/slice';\nimport { useSelector } from 'react-redux';\nimport { selectStatusFilter } from 'redux/filter/selectors';\nimport { statusFilters } from 'redux/constants';\nimport { Button } from 'components/Button/Button';\nimport css from './StatusFilter.module.css';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = value => {\n    dispatch(setStatusFilter(value));\n  };\n\n  return (\n    <div className={css.statusFilter}>\n      <h2 className={css.title}>Filter by status:</h2>\n      <div className={css.wrapper}>\n        <Button\n          selected={filter === statusFilters.all}\n          onClick={() => handleFilterChange(statusFilters.all)}\n        >\n          All\n        </Button>\n        <Button\n          selected={filter === statusFilters.active}\n          onClick={() => handleFilterChange(statusFilters.active)}\n        >\n          Active\n        </Button>\n        <Button\n          selected={filter === statusFilters.completed}\n          onClick={() => handleFilterChange(statusFilters.completed)}\n        >\n          Completed\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import css from './TasksBar.module.css';\nimport { TaskCouner } from 'components/TaskCounter/TaskCounter';\nimport { StatusFilter } from 'components/StatusFilter/StatusFilter';\n\nexport const TasksBar = () => {\n  return (\n    <div className={css.wrapper}>\n      <TaskCouner />\n      <StatusFilter />\n    </div>\n  );\n};\n","import { TasksList } from 'components/TasksList/TasksList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectIsLoading } from 'redux/tasks/selectors';\nimport { TaskForm } from 'components/TaskForm/TaskForm';\nimport { TasksBar } from 'components/TasksBar/TasksBar';\n\nconst Tasks = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks);\n  }, [dispatch]);\n\n  return (\n    <>\n      <TasksBar />\n      <TaskForm />\n      <div>{isLoading && 'Loading...'}</div>\n      <TasksList />\n    </>\n  );\n};\n\nexport default Tasks;\n"],"names":["TaskItem","task","dispatch","useDispatch","className","css","type","checked","completed","onChange","toggleCompleted","text","onClick","deleteTask","id","size","selectStatusFilter","state","filters","status","selectTasks","tasks","items","selectIsLoading","isLoading","selectTaskCount","createSelector","reduce","acc","active","selectVisibleTasks","statusFilter","statusFilters","filter","TasksList","useSelector","map","Button","selected","children","otherProps","clsx","TaskForm","onSubmit","e","preventDefault","form","target","addTask","elements","value","reset","name","placeholder","TaskCouner","count","StatusFilter","handleFilterChange","setStatusFilter","TasksBar","useEffect","fetchTasks"],"sourceRoot":""}